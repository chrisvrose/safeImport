

// iterate through success.txt, and gather tree stats and cloc stats

import { readFile ,writeFile, rename} from "fs/promises";
import {promisify} from 'node:util'
import { exec } from 'node:child_process';
import { processPromisesBatch } from "../batch.mjs";
import { cacheFunctionOutput } from "../cache.mjs";
import {stringify} from 'csv/sync'
import {  existsSync, } from "node:fs";
import { getTreeStatsOfProject } from "../../src_deptree/index.mjs";
const execP = promisify(exec);


const text = (await readFile('success.txt')).toString();

const repos = text.trim().split('\n');

const repoCountsCached = await cacheFunctionOutput('repoClocCounts.json',async ()=>{
    const repoCounts = await processPromisesBatch(repos,32,getData);
    return repoCounts;
},true);
console.log(repoCountsCached.filter(e=>e.before.nFiles!==null).length)

/** @typedef {typeof repoCountsCached[0]} RepoCount */
/** @type {Map<string,RepoCount} */
const x = new Map();

for(const repoCount of repoCountsCached){
    x.set(repoCount.repoName,repoCount);
}

// console.log(x)
const expected_order = [
"mime-types",
"http-errors",
"source-map-support",
"compressible",
"global-modules",
"thenify",
"mz",
"memory-fs",
"pinkie-promise",
"pretty-error",
"renderkid",
"hpack.js",
"wbuf",
"expand-tilde",
"homedir-polyfill",
"basic-auth",
"for-own",
"is-unc-path",
"recursive-readdir",
"path-root",
"cookies",
"bufferutil",
"utf-8-validate",
"easy-table",
"is-dotfile",
"glob-parent",
"is-glob",
"doctrine",
"define-property",
"jsonfile",
"optionator",
"type-check",
"levn",
"is-extendable",
"esquery",
"on-finished",
"error-ex",
"finalhandler",
"content-disposition",
"terser",
"proxy-addr",
"prop-types",
"has-values",
"has-value",
"url-parse",
"simple-swizzle",
"clone-deep",
"shallow-clone",
"prettier-linter-helpers",
"cors",
"fd-slicer",
"object.pick",
"language-tags",
"union-value",
"object-copy",
"static-extend",
"hash.js",
"browserify-zlib",
"hmac-drbg",
"des.js",
"dom-converter",
"zip-stream",
"crc32-stream",
"one-time",
"resolve-dir",
"yargs-unparser",
"warning",
"bplist-parser",
"md5",
"is-relative",
"is-absolute",
"redis-parser",
"lazy-cache",
"css-to-react-native",
"parse-filepath",
"request-progress",
"jest-junit",
"postcss-initial",
"unixify",
"cookie-parser",
"saslprep",
"window-size",
"keygrip",
"contains-path",
"fined",
"object.defaults",
"is-color-stop",
"gonzales-pe",
"make-iterator",
"glob-base",
"uid-safe",
"fancy-log",
"object.map",
"object.omit",
"find-babel-config",
"mquery",
"xlsx",
"json-to-pretty-yaml",
"named-placeholders",
"parse-glob",
"plugin-error",
"is-equal-shallow",
"original",
"detective-typescript",
"detective-es6",
"json2mq",
"create-error-class",
"detective-cjs",
"to-through",
"resolve-options",
"ansi-gray",
"bcrypt",
"mixin-object",
"optimize-css-assets-webpack-plugin",
"ordered-read-streams",
"sync-fetch",
"to-absolute-glob",
"glogg",
"unique-stream",
"align-text",
"gulplog",
"blob",
"center-align",
"right-align",
"wkx",
"chai-as-promised",
"json-pointer",
"has-glob",
"promptly",
"hot-shots",
"semver-greatest-satisfied-range",
"each-props",
"is2",
"levenary",
"airbnb-prop-types",
"remove-bom-stream",
"remove-bom-buffer",
"dotenv-defaults",
"rework",
"vizion",
"array-sort",
"default-compare",
"pad-right",
"passport-local",
"console.table",
"cli-tableau",
"condense-newlines",
"requireg",
"object.reduce",
"properties-reader",
"array-initial",
"default-resolution",
"collection-map",
"ansi-red",
"broccoli-merge-trees",
"eslint-plugin-react-native",
"is-valid-path",
"strip-hex-prefix",
"uglify-es",
"ansi-cyan",
"method-override",
"readline2",
"number-allocator",
"has-gulplog",
"ethjs-util",
"unescape",
"validate.io-integer",
"stream-parser",
"compute-gcd",
"validate.io-integer-array",
"compute-lcm",
"set-getter",
"passport-oauth2",
"i18n-iso-countries",
"sha1",
"json-diff",
"dreamopt",
"highlight-es",
"basic-auth-connect",
"glob2base",
"third-party-capital",
"new-date",
"webrtc-adapter",
"xhr-request-promise",
"contentful-resolve-response",
"jest-sonar-reporter",
"parse-author",
"amd-name-resolver",
"mocha-multi-reporters",
"eslint-plugin-filenames",
"apache-crypt",
"semver-intersect",
"fetch-ponyfill",
"karma-mocha",
"is-odd",
"babel-plugin-ember-modules-api-polyfill",
"csurf",
"taketalk",
"require-and-forget",
"geojson-equality",
"relative",
"pkg-config",
"rss-parser",
"xml-but-prettier",
"karma-spec-reporter",
"speakeasy",
"parsejson",
"promise-to-callback",
"sha3",
"is-self-closing",
"alce",
"async-promise-queue",
"typeof-article",
"handlebars-utils",
"html-tag",
"mock-require",
"broccoli-slow-trees",
"json-merge-patch",
"download-stats",
"can-symlink",
"ttf2eot",
"eslint-plugin-you-dont-need-lodash-underscore",
"pad-left",
"passport-http-bearer",
"react-themeable",
"ansi-green",
"livereload",
"match-url-wildcard",
"promisify-event",
"opentype.js",
"clean-deep",
"react-linkify",
"passport-oauth1",
"date.js",
"json-rpc-error",
"broccoli-asset-rewrite",
"rest-facade",
"eslint-plugin-sort-destructure-keys",
"ansi-yellow",
"ansi-grey",
"ansi-magenta",
"ansi-bold",
"node-sass-tilde-importer",
"ansi-underline",
"ansi-bgred",
"ansi-dim",
"ansi-bgyellow",
"ansi-bgwhite",
"ansi-bgblue",
"ansi-blue",
"ansi-black",
"ansi-reset",
"ansi-strikethrough",
"ansi-italic",
"ansi-bgmagenta",
"ansi-white",
"ansi-hidden",
"ansi-inverse",
"ansi-bgcyan",
"ansi-bggreen",
"ansi-bgblack",
"typpy",
"varstream",
"passport-custom",
"list-item",
"contra",
"mocha-suppress-logs",
"is-valid-app",
"koa-mount",
"node-eval",
"stringifier",
"ember-cli-test-info",
"nodeify",
"react-native-dotenv",
"node-gettext",
"rdf-canonize",
"passport-oauth",
"chai-json-schema",
"markdown-toc",
"universal-deep-strict-equal",
"espower-location-detector",
"jest-css-modules",
"buffermaker",
"is-even",
"deep-for-each",
"rename-keys",
"memcached",
"kerberos",
"smtp-connection",
"deep-rename-keys",
"wrap-fn",
"generate-schema",
"ware",
"stringify-object-es5",
"json-promise",
"receptacle",
"chai-datetime",
"to-source-code",
"safe-compare",
"js-yaml-js-types",
"to-ast",
"is-native",
"ip-cidr",
"multimath",
"kruptein",
"rocambole",
"dnscache",
"wawoff2",
"doctrine-temporary-fork",
"koa-route",
"git-username",
"create-frame",
"merge-value",
"fd-slicer2",
"mergexml",
"receptor",
"longjohn",
"resolve-bin",
"axios-rate-limit",
"node-fetch-retry",
"helper-markdown",
"gonzales-pe-sl",
"xml-parser",
"saml2-js",
"react-stickynode",
"parse-prefer-header",
"express-xml-bodyparser",
"omit-empty",
"request-debug",
"table-parser",
"random-words",
"lzma-native",
"esprima-extract-comments",
"add-filename-increment",
"protobuf.js",
"oauth2orize",
"extract-comments",
"path-extra",
"redux-promise",
"vow-queue",
"compute-cosine-similarity",
"grunt-mocha-test",
"weak-napi",
"propose",
"radio-symbol",
"toggle-array",
"choices-separator",
"compute-dot",
"compute-l2norm",
"fusing",
"scrypt",
"arr-swap",
"ps-node",
"readme-badger",
"slack-node",
"less-vars-to-js",
"chai-files",
"smpltmpl",
"testrail-api",
"payment",
"decode-bmp",
"camelo",
"currency-formatter",
"eslint-plugin-you-dont-need-momentjs",
"httperrors",
"passport-google-oauth",
"sort-by",
"merge-estraverse-visitors",
"empower-assert",
"component-cookie",
"serverless-plugin-aws-alerts",
"pm2-promise",
"ember-cli-valid-component-name",
"connect-datadog",
"file-match",
"defaults-deep",
"vue-moment",
"jsdom-worker",
"assign-deep",
"intelli-espower-loader",
"moji",
"escape-quotes",
"delimiter-regex",
"cache-manager-ioredis",
"cookiefile",
"mitm",
"os-dns-native",
"mongodb-build-info",
"html-to-vdom",
"github-url-to-object",
"multiline",
"passport-openidconnect",
"electron-window",
"deep-sort-object",
"is-valid-element-name",
"stylelint-config-standard-vue",
"jexl",
"underscore-keypath",
"git-repo-version",
"posthtml-urls",
"gravatar",
"test-results-parser",
"strip-bom-buffer",
"browserify-transform-tools",
"sanitize-html-react",
"jquery-datetimepicker",
"abs",
"data-store",
"json-api-serializer",
"resemblejs",
"exec-limiter",
"if-env",
"babel-plugin-inline-dotenv",
"vimeo",
"core_d",
"koa-qs",
"express-formidable",
"object-path-immutable",
"gulp-insert",
"oargv",
"flowstate",
"glibc-version",
"execution-time",
"acorn-object-spread",
"vue-shortkey",
"ursa-optional",
"shortcss",
"has-own-deep",
"process.argv",
"synesthesia",
"sloc",
"validate",
"validate.io-array-like",
"utils-regex-from-string",
"import-html-entry",
"kitx",
"phylo",
"stream-chunks",
"co-read",
"dirty-json",
"babel-plugin-transform-dynamic-import",
"redis-clustr",
"wiredep",
"composer",
"eslint-plugin-codeceptjs",
"deviate",
"redux-freeze",
"postcss-hexrgba",
"file-is-binary",
"project-name",
"sendgrid-rest",
"css-color-list",
"predefine",
"is-binary-buffer",
"laravelphp",
"ember-cli-broccoli-sane-watcher",
"postal-codes-js",
"engine",
"eslint-plugin-modules-newline",
"unlazy-loader",
"p-queue-compat",
"map-schema",
"sort-object-arrays",
"babel-preset-amex",
"intercept-stdout",
"proj4leaflet",
"ml-kernel-gaussian",
"esbuild-plugin-text-replace",
"co-with-promise",
"layouts",
"schema-inspector",
"hubot-slack",
"setheader",
"color-stringify",
"geojson-antimeridian-cut",
"cfenv",
"aws-cdk-local",
"jest-text-transformer",
"duplexpair",
"rethrow",
"expand-args",
"trim-leading-lines",
"parser-front-matter",
"broccoli-viz",
"make-unique",
"expand-object",
"to-choices",
"assemble-streams",
"elfy",
"is-answer",
"random-weighted-choice",
"pa11y-runner-htmlcs",
"cli-source-preview",
"ml-convolution",
"template-error",
"diff-json",
"stream-demux",
"clean",
"undertaker-forward-reference",
"extract-banner",
"wdio-reportportal-service",
"should-http",
"base-argv",
"adbkit-monkey",
"readable-error",
"commons-validator-js",
"winston-slack-webhook-transport",
"except",
"tree-model",
"base-task",
"shift-regexp-acceptor",
"base64url-universal",
"raml-parser",
"pa11y-reporter-cli",
"get-view",
"maplibre-gl-draw-circle",
"editorjs-undo",
"serverless-plugin-utils",
"serverless-api-gateway-caching",
"company-email-validator",
"shift-fuzzer",
"tableize-object",
"node-redis-scripty",
"pa11y-runner-axe",
"base-runtimes",
"common-config",
"babel-loader-exclude-node-modules-except",
"humanize-bytes",
"deep-bind",
"blake2",
"mkdirp-then",
"codacy-coverage",
"base-engines",
"serverless-api-gateway-throttling",
"connect-query",
"rdf-transform-triple-to-quad",
"webworker-promise",
"svg-path-bounding-box",
"inquirer-promise",
"finished",
"nodemailer-ses-transport",
"rework-plugin-function",
"saucectl",
"textlint-rule-preset-ja-technical-writing",
"urllite",
"virtual-u2f",
"simulate-event",
"serverless-mysql",
"package-json-versionify",
"winston-array-transport",
"hexo-generator-category",
"rollup-plugin-banner2",
"hexo-generator-archive",
"emailjs-utf7",
"abstract-socket",
"rework-plugin-url",
"mocha-jsdom",
"stylelint-config-gds",
"passport-cookie",
"ethjs-provider-http",
"cypress-intellij-reporter",
"sort-pjson",
"connect-loki",
"is-array-like",
"next-remote-watch",
"deferential",
"promise-chains",
"lasso-caching-fs",
"lasso-package-root",
"hexo-renderer-ejs",
"generate-password-browser",
"json5-jest",
"amex-jest-preset-react",
"opted",
"secure-random-password",
"scss-comment-parser",
"lil-uri",
"rollup-plugin-sizes",
"gulp-order",
"esanimate",
"babel-preset-es2015-rollup",
"loopback-filters",
"gfm-code-blocks",
"leaflet-geometryutil",
"modularscale",
"chai-colors",
"babel-plugin-auto-import",
"jquery-extendext",
"remark-hbs",
"jwt-builder",
"weak",
"ref-struct-di",
"jenkins",
"eslint-config-tc",
"eslint-plugin-scanjs-rules",
"chartjs-test-utils",
"function-double",
"lambda-multipart-parser",
"gulp-multi-process",
"hcl-to-json",
"defaulty",
"undoo",
"eslint-plugin-modules-newlines",
"sourcemapped-stacktrace-node",
"loading-spinner",
"lost",
"mktmpdir",
"showdown-xss-filter",
"last-commit-log",
"lerna-audit",
"flatley",
"wdio-mochawesome-reporter",
"qs-middleware",
"googlemaps",
"rocambole-strip-alert",
"is-dotdir",
"newman-reporter-slackmsg",
"dotgitconfig",
"z-schema-errors",
"redis-server",
"validate.io-object",
"imparse",
"markdown-builder",
"koa-locale",
"eslint-plugin-googleappsscript",
"lodash-move",
"rudy-match-path",
"onedrive-api",
"magicpen-prism",
"sqlite-async",
"babel-plugin-dotenv-import",
"capture-console",
"check-export-map",
"argle",
"markdown-utils",
"json-parse-context",
"multi-glob",
"mongoose-paginate",
"node-postal",
"access-control",
"passport-trello",
"ebay-oauth-nodejs-client",
"parse-data-url",
"pbkdf2-password",
"list-it",
"await-busboy",
"url-assembler",
"rfc6902-ordered",
"npe",
"find-exec",
"jsx-runtime",
"sort-by-value",
"mongoose-timestamp",
"async-test-util",
"babel-plugin-transform-react-createelement-to-jsx",
"i18n-nationality",
"npm-paths",
"exec-promise",
"chai-almost",
"queue-fifo",
"grant-profile",
"jest-monocart-coverage",
"idna-uts46",
"recaptcha2",
"create-server",
"strong-data-uri",
"trace-error",
"babel-plugin-jsx-pragmatic",
"sort-media-queries",
"rollup-plugin-legacy",
"tin-validator",
"node-random-name",
"super-error",
"nicely-format",
"karma-summary-reporter",
"jssoup",
"eslint-plugin-no-async-array-methods",
"pure-render-decorator",
"prismarine-windows",
"is-present",
"webpack-plugin-hash-output",
"jspm-github",
"node-df",
"is-ttf",
"chai-asserttype",
"express-body-parser-error-handler",
"koa-ejs",
"xunit-file",
"gatsby-plugin-force-trailing-slashes",
"fs-mode",
"cbify",
"wink-distance",
"fobject",
"mojangson",
"babel-plugin-transform-es2017-object-entries",
"promise-props-recursive",
"postcss-banner",
"mdx",
"change-case-object",
"is-otf",
"hmpo-model",
"mocha-circleci-reporter",
"aliasify",
"jquery.payment",
"wdio-cucumber-reporter",
"babel-preset-vue-app",
"json-schema-for-openapi",
"express-response-size",
"gift",
"loads",
"deep-filter",
"eslint-plugin-no-unsafe-innerhtml",
"bluebird-ff",
"whois-json",
"restify-cookies",
"eventproxy",
"superagent-use",
"postcss-purgecss-laravel",
"axe-webdriverjs",
"firebase-scrypt",
"line-ending-corrector",
"fetch-base64",
"serverless-default-aws-resource-attributes",
"es7-object-polyfill",
"babel-plugin-react-native-platform-specific-extensions",
"robloach-datfile",
"jsonbird",
"ee-argv",
"nodemailer-mandrill-transport",
"js2coffee",
"trigram-similarity",
"metalsmith-permalinks",
"chunkify-stream",
"ascii-tree",
"camunda-dmn-moddle",
"ml-hclust",
"iso-639-1-zh",
"winston-transport-rollbar-3",
"emoji-text",
"esformatter-eol-last",
"vue-numeric",
"express-socket.io-session",
"libs-dogstatsd",
"sorted-joyo-kanji",
"json-int64",
"request-cookie",
"spellcheck-technical-word",
"superagent-no-cache",
"rewrite-ext",
"cometd-nodejs-client",
"pdf-parse-new",
"prebuild-webpack-plugin",
"first-base",
"tokenbucket",
"esformatter-literal-notation",
"MD5",
"csv2geojson",
"statman-stopwatch",
"cacheman",
"eslint-plugin-destructuring",
"git-user-name",
"eslint-plugin-const-case",
"babel-type-scopes",
"karma-expect",
"consent-string",
"agent-pool",
"is-affirmative",
"jspngopt",
"inspect.js",
"rich-text",
"memoize-bind",
"javascript-brunch",
"creature-features",
"gulp-filenames",
"os-locale-s-fix",
"better-sqlite3-with-prebuilds",
"ab-testing",
"lookup-path",
"dataloader-sort",
"jquery-once",
"vdom-to-html",
"koa-rewrite-75lb",
"webpack-env",
"get-pkg",
"react-time-input",
"os-locale-s",
"coffee-register",
"superagent-mocker",
"eslint-config-mongodb-js",
"stack-lifo",
"ethjs-provider-signer",
"redux-ignore",
"envs",
"redisearch",
"callback-count",
"eslint-plugin-template",
"benchpressjs",
"edtf",
"jsotp",
"fast-html-parser",
"fs-finder",
"kuroshiro",
"redux-persist-cookie-storage",
"av",
"normalize-object",
"raptor-logging",
"commitlint-config-cz",
"json-circular-stringify",
"vue-full-calendar",
"esformatter-braces",
"nuxt-svg-loader",
"tedious-connection-pool",
"passport-trusted-header",
"php-array-parser",
"nunjucks-comma-filter",
"hapi-forwarded-for",
"django-channels",
"wonderful-fetch",
"cz",
"remark-docusaurus-tabs",
"ddp.js",
"ratelimit.js",
"cytoscape-cise",
"shallow-with-context",
"jest-jenkins-reporter",
"passport.socketio",
"serverless-postgres",
"rollup-plugin-browsersync",
"exists-file",
"react-combine-reducers",
"express-boom",
"mongoose-update-if-current",
"pool2",
"pagexray",
"probability-distributions",
"utils-properties-parse",
"eslint-plugin-no-cyrillic-string",
"node-sass-middleware",
"gel-sass-tools",
"eslint-plugin-react-filenames",
"hubot-robin",
"callbag-take-while",
"sluglife",
"postcss-em-media-query",
"color-generator",
"geojson-precision",
"describe-property",
"compute-dtype",
"diffpatch",
"eslint-config-seegno",
"htmx-ext-head-support",
"koa-respond",
"node-dig-dns",
"nuxt-facebook-pixel-module",
"feathers-query-filters",
"selector-observer",
"sync-i18n",
"shallow-element-equals",
"coffee-coverage",
"chunk-text",
"markdown-toc-unlazy",

]
const vals = expected_order.map((e)=>{
    const v = x.get(e);
    return [e,v?.before?.nFiles,v?.after?.nFiles,v?.before?.code,v?.after?.code,v?.sizeReduction,v?.preDepth,v?.preWidth]
})
const valsString = stringify(vals,{header:true,columns:['repo','nFilesBefore','nFilesAfter','codeBefore','codeAfter','sizeReduction','preDepth','preWidth']})
// console.log(valsString)
await writeFile('success_cloc_stats.csv',valsString)

/**
 * Run cloc --json on the repo, and return the json parsed.
 * @param {string} repo 
 */
async function getData(repo){
    const e1Promise = execP(`cloc --json output/${repo} | jq "{nFiles:.JavaScript.nFiles,code:.JavaScript.code}"`)
    const e2Promise = execP(`cloc --json dist/${repo} | jq "{nFiles:.JavaScript.nFiles,code:.JavaScript.code}"`)
    const e3Promise = verifyTreeStats(repo);
    const [{stdout},{ stdout:stdPost },{depth:preDepth,width:preWidth}] = await Promise.all([e1Promise,e2Promise, e3Promise]);
    // console.log("haha",repo)
    /** @typedef {{nFiles:number|null,code:number|null}} CodeInfo */
    /** @type {CodeInfo} */
    const stdOutObj = JSON.parse(stdout);
    /** @type {CodeInfo} */
    const stdPostObj = JSON.parse(stdPost);
    // assertFilesContained(stdOutObj, repo);
    // assertFilesContained(stdPostObj, repo);
    // if(repo==='mime-types'){
    //     console.log('AAAA',stdPostObj.code,stdOutObj.code)
    // }
    return {repoName: repo,before:stdOutObj,after:stdPostObj,preDepth,preWidth};

}

async function verifyTreeStats(repo){
    if(!existsSync(`../candidates-repos/${repo}`)){
        console.warn(`Repo ${repo} does not exist in candidates-repos, cannot get tree stats`);
        return {depth:null,width:null};
    }
    const existsOriginal = existsSync(`../candidates-repos/${repo}/node_modules`);
    const existsHidden = existsSync(`../candidates-repos/${repo}/.node_modules`);
    if(!existsOriginal && !existsHidden){
        return {depth:null,width:null};
    }
    if(!existsOriginal && existsHidden){
        await rename(`../candidates-repos/${repo}/.node_modules`, `../candidates-repos/${repo}/node_modules`);
    }
    /** @type {{depth: number|null,width:number|null}} */
    let res = {depth:null,width:null};
    try{
        res = await getTreeStatsOfProject(`../candidates-repos/${repo}`);

    }catch(e){}
    if(!existsOriginal && existsHidden){
        await rename(`../candidates-repos/${repo}/node_modules`, `../candidates-repos/${repo}/.node_modules`);
    }
    return res;
}

function assertFilesContained(stdOutObj, repo) {
    if (stdOutObj.nFiles === 0 || stdOutObj?.nFiles === undefined || stdOutObj?.nFiles === null) {
        console.error(stdOutObj);
        throw new Error(`cloc pre failed for ${repo} - no files counted`);
    }
    if(stdOutObj?.code ===undefined || stdOutObj?.code === null){
        console.error(stdOutObj);
        throw new Error(`cloc pre failed for ${repo} - no code field`);
    }
}
